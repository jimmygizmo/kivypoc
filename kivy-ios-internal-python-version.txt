TODO: Double check on usage of 3.7.10. I was watching the log of the very big build of kivy-ios (toolchain build kivy)
and I saw something install Python 3.8.2. I also saw Python 3.8 in other build info and did not notice any other
Python versions. Not explicitly confirmed yet but 3.7 info looks like it might be outdated.
The main instructions I am currently following are from https://kivy.org/doc/stable/guide/packaging-ios.html
but the mention of Python version is only on a web page not in one place and could easily be outdated info.
TODO: Plan to change to Python 3.8.2 for the kivypoc venv. Will need to install this with Pyenv and we will no
longer need 3.7
CLARIFICATION: Once built and deployed using Kivy-IOS, your Python code will be running there under Python 3.8.2
and you cannot easily or not at all control this version. So that your IDE and local testing is appropriate, this
is why you want your local virtual environment to exactly match the version you will be deploying with.
TODO: Re-write this entire doc to incorporate this clarification and the updated version info.

-------------------

Oh boy! The plot thickens yet again. Now that I have generated a few XCode projects with Kivy IOS and inspected the
contents .. I have located Python 3.8 but not 3.7. I need to investigate further. I have found 2-3 clues for 3.7
and 2-3 clues for 3.8 .. so the issue is still up in the air. I think I am getting close to determining exactly where
your apps code is run from and then that will lead to explicit confirmation of the python version. There could be
more than one python installation and more than one python version involved throughout the overall build process
and I have yet to spend the time needed to chase down the various clues I have seen.
Of course this all goes without saying that the documentation is not clear on this issue, especially in light of
seeing multiple indications of both 3.7 and 3.8 between logs, pathnames, filenames and the built module list.

--------------------

IT IS OFFICIAL. THE KIVY-IOS APPS RUN UNDER 3.8.2. (The documentation and other items suggesting 3.7 are wrong.)
This is the output from Kivy-IOS Python code running on an iPhone 6S Plus:
* * * * * * * * PYTHON VERSION: 3.8.2 (default, Jun  9 2021, 14:35:07)
TODO: Now that this issue is finally resolved, update all documentation and comments accordingly.

It is best to have every single runtime version match the versions in your development environment exactly.
I'd say it is pretty much a requirement. Barring that your never REALLY can be sure you do not have a seen or
unseen difference in behavior. Best not to tempt fate. So to fix my development environment, I will be
removing Python 3.7.10 and installing Python 3.8.2 (with Pyenv of course.) I will then re-create the kivypoc
virtual environment off of 3.8.2 (as standard practice, update pip and setuptools for the new virtual env) and then
install the dependencies from requirements.txt (or perhaps requirements-pinned.txt)
TODO: Decide on best practice .. should the dev env always install from requirements-pinned.txt?
  Perhaps not when development is extremely active or experimental or period upgrades are desired at that time ..
  otherwise if simulating production behavior is the goal, then use the pinned versions. Yes that's a good policy.

- - - - - - - - - -

Pyenv cannot install version 3.8.2. I thought this old problem had gone away. Even the following old trick did not work:
SDKROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX11.3.sdk MACOSX_DEPLOYMENT_TARGET=11.3 pyenv install 3.8.2

Best option to try next is 3.8.10. which is the highest 3.8 sub-version.
SUCCESS.
3.8.10 should be fine.

--------------------------
TAKE NOTE OF SITE-PACKAGES PATH SEEN IN APP RUNNING ON IOS:
</private/var/containers/Bundle/Application/<app id>/
camerademo.app/lib/python3.8/site-packages/kivy/data/glsl/default.png>
(enter inserted after <app id> for readability.)
-----------------------------------

